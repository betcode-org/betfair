name: test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master", "release/*"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check setup.py
      run: |
        python setup.py check

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Black fmt
      run: |
        black . --check

    - name: build_ext
      run: |
        python setup.py build_ext --inplace

    - name: Unittest
      run: |
        python -m unittest discover -s tests
        
    - name: Coverage
      run: |
        coverage run -m unittest discover
        coverage report

  test-speed:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-speed.txt
          pip install -r requirements-test.txt

      - name: build_ext
        run: |
          python setup.py build_ext --inplace

      - name: Unittest
        run: |
          python -m unittest discover -s tests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Build package and docs
      run: |
        python setup.py sdist bdist_wheel
        twine check dist/*
        mkdocs build

    - name: Publish
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Action"
        twine upload dist/*
        mkdocs gh-deploy --force
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
